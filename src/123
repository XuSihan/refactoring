line_number: 3
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
action: Insert
nodeType: Invocation
createCellSignalTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Insert
nodeType: Invocation
createLocationTable(database)
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
--------------------A new method is inserted!
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
action: Insert
nodeType: Invocation
createCellTable(database)
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
action: Insert
nodeType: Invocation
createEventLogTable(database)
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.22507122507122512
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.05405405405405406
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.08783783783783783
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.2072072072072072
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.21846846846846846
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.40932642487046633
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.0855855855855856
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.5315315315315315
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.08333333333333337
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.07432432432432434
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.36711711711711714
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.08783783783783783
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.45945945945945943
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.0788288288288288
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.38415841584158417
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.42342342342342343
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.0788288288288288
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.05180180180180183
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.20270270270270274
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.4274509803921569
use extracted method directly
Variable Access that almost only used in the deleted part is: 
the most used element: (CELL_SIGNAL_TABLE)
Field Access that almost only used in the deleted part is: 
the most used element: (CELL_SIGNAL_TABLE)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter
Typed element that almost only used in the deleted part is: 
the most used element: (((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);")
Package that almost only used in the deleted part is: 
the most used package: com.SecUpwN.AIMSICD.adapters
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 4
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Insert
nodeType: Invocation
createCellSignalTable(database)
action: Insert
nodeType: Invocation
createLocationTable(database)
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
action: Insert
nodeType: Invocation
createCellTable(database)
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
--------------------A new method is inserted!
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
action: Insert
nodeType: Invocation
createEventLogTable(database)
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.20370370370370372
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.033391915641476255
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.0773286467486819
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.21616871704745166
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.11247803163444636
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.5803108808290156
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.04920913884007028
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.36906854130052724
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.06678383128295251
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.054481546572935025
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.42355008787346227
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.06854130052724072
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.5975395430579965
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.05975395430579966
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.46221441124780316
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.5483304042179262
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.061511423550087874
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.033391915641476255
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.10193321616871709
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.8963093145869947
Variable Access that almost only used in the deleted part is: 
the most used element: (OPENCELLID_TABLE)
Field Access that almost only used in the deleted part is: 
the most used element: (OPENCELLID_TABLE)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter
Typed element that almost only used in the deleted part is: 
the most used element: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
Package that almost only used in the deleted part is: 
the most used package: java.lang
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 5
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
action: Insert
nodeType: Invocation
createCellSignalTable(database)
action: Insert
nodeType: Invocation
createLocationTable(database)
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
action: Insert
nodeType: Invocation
createCellTable(database)
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
--------------------A new method is inserted!
action: Insert
nodeType: Invocation
createEventLogTable(database)
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.21082621082621078
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.05555555555555558
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.10233918128654973
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.26023391812865493
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.14035087719298245
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.43523316062176165
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.08479532163742687
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.52046783625731
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.10526315789473684
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.07309941520467833
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.8245614035087719
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.13157894736842102
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.595959595959596
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.10233918128654973
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.42970297029702975
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.6353887399463807
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.10526315789473684
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.05847953216374269
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.14035087719298245
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.49215686274509807
Variable Access that almost only used in the deleted part is: 
the most used element: (TABLE_DEFAULT_MCC)
Field Access that almost only used in the deleted part is: 
the most used element: (TABLE_DEFAULT_MCC)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter
Typed element that almost only used in the deleted part is: 
the most used element: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Package that almost only used in the deleted part is: 
the most used package: java.lang
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 6
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
action: Insert
nodeType: Invocation
createCellSignalTable(database)
action: Insert
nodeType: Invocation
createLocationTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
--------------------A new method is inserted!
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
action: Insert
nodeType: Invocation
createCellTable(database)
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
action: Insert
nodeType: Invocation
createEventLogTable(database)
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.2222222222222222
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.0424107142857143
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.0758928571428571
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.2477678571428571
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.1383928571428571
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.5785837651122625
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.0625
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.4665178571428571
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.0736607142857143
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.0625
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.515625
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.0870535714285714
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.8839285714285714
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.0758928571428571
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.4653465346534653
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.6964285714285714
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.0825892857142857
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.0424107142857143
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.125
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.580392156862745
Variable Access that almost only used in the deleted part is: 
the most used element: (LOCATION_TABLE)
Field Access that almost only used in the deleted part is: 
the most used element: (LOCATION_TABLE)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter
Typed element that almost only used in the deleted part is: 
the most used element: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Package that almost only used in the deleted part is: 
the most used package: java.lang
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 7
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
action: Insert
nodeType: Invocation
createCellSignalTable(database)
action: Insert
nodeType: Invocation
createLocationTable(database)
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
action: Insert
nodeType: Invocation
createCellTable(database)
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
--------------------A new method is inserted!
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
action: Insert
nodeType: Invocation
createEventLogTable(database)
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.17808219178082196
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.03561643835616435
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.05205479452054795
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.3671232876712329
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.09999999999999998
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.44109589041095887
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.047945205479452024
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.2684931506849315
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.047945205479452024
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.05342465753424652
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.3178082191780822
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.0547945205479452
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.4164383561643835
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.05068493150684927
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.3890410958904109
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.510958904109589
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.046575342465753455
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.03424657534246578
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.09178082191780823
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.43561643835616437
use extracted method directly
Variable Access that almost only used in the deleted part is: 
the most used element: (SILENT_SMS_TABLE)
Field Access that almost only used in the deleted part is: 
the most used element: (SILENT_SMS_TABLE)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: Examples.SILENT_SMS_CARD_DATA
Typed element that almost only used in the deleted part is: 
the most used element: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Package that almost only used in the deleted part is: 
the most used package: Examples
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 8
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
action: Insert
nodeType: Invocation
createCellSignalTable(database)
action: Insert
nodeType: Invocation
createLocationTable(database)
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
--------------------A new method is inserted!
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
action: Insert
nodeType: Invocation
createCellTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
action: Insert
nodeType: Invocation
createEventLogTable(database)
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.1951566951566952
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.030063291139240556
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.05696202531645567
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.19778481012658233
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.10284810126582278
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.9161392405063291
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.04746835443037978
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.3275316455696202
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.060126582278481
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.05063291139240511
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.37658227848101267
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.06170886075949367
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.5901898734177216
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.05379746835443033
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.4572784810126582
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.5126582278481013
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.05379746835443033
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.030063291139240556
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.09335443037974689
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.625
Variable Access that almost only used in the deleted part is: 
the most used element: (CELL_TABLE)
Field Access that almost only used in the deleted part is: 
the most used element: (CELL_TABLE)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter
Typed element that almost only used in the deleted part is: 
the most used element: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Package that almost only used in the deleted part is: 
the most used package: java.lang
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 9
False
action: Insert
nodeType: Invocation
createOpenCellIDTable(database)
action: Insert
nodeType: Invocation
createCellSignalTable(database)
action: Insert
nodeType: Invocation
createLocationTable(database)
action: Insert
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Insert
nodeType: Method
private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
}
action: Insert
nodeType: Invocation
createDefaultMCCTable(database)
action: Insert
nodeType: Method
private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(LOC_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(CELL_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
    database.execSQL(TABLE_EVENTLOG_CREATE);
    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
    database.execSQL(ZeroEvent);
}
--------------------A new method is inserted!
action: Insert
nodeType: Invocation
createCellTable(database)
action: Insert
nodeType: Method
private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
    database.execSQL(OPENCELLID_DATABASE_CREATE);
}
action: Insert
nodeType: Method
private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
    database.execSQL(SMS_DATABASE_CREATE);
    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
    database.execSQL(ZeroSMS);
}
action: Insert
nodeType: Method
private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
}
action: Insert
nodeType: Invocation
createEventLogTable(database)
========{
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
========@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    createCellSignalTable(database);
    createSilentSmsTable(database);
    createLocationTable(database);
    createCellTable(database);
    createOpenCellIDTable(database);
    createDefaultMCCTable(database);
    createEventLogTable(database);
    populateDefaultMCC(database);
}
+++++++++++
action: Insert
nodeType: Invocation
createSilentSmsTable(database)
action: Move
nodeType: LocalVariable
java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
action: Move
nodeType: Invocation
database.execSQL(ZeroEvent)
action: Move
nodeType: Invocation
database.execSQL(OPENCELLID_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
action: Move
nodeType: LocalVariable
java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(TABLE_EVENTLOG_CREATE)
action: Move
nodeType: Invocation
database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
action: Move
nodeType: Invocation
database.execSQL(CELL_DATABASE_CREATE)
action: Move
nodeType: Parameter
android.database.sqlite.SQLiteDatabase database
action: Move
nodeType: LocalVariable
java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
action: Move
nodeType: Invocation
database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(SMS_DATABASE_CREATE)
action: Move
nodeType: LocalVariable
java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
action: Move
nodeType: LocalVariable
java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
action: Move
nodeType: Invocation
database.execSQL(LOC_DATABASE_CREATE)
action: Move
nodeType: Invocation
database.execSQL(ZeroSMS)
action: Move
nodeType: Invocation
database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
action: Move
nodeType: LocalVariable
java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"
the code is: java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"the similarity of this stuff is: 0.54
the code is: database.execSQL(ZeroEvent)the similarity of this stuff is: 0.020769230769230762
the code is: database.execSQL(OPENCELLID_DATABASE_CREATE)the similarity of this stuff is: 0.03230769230769226
the code is: java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"the similarity of this stuff is: 0.1430769230769231
the code is: database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))the similarity of this stuff is: 0.06307692307692303
the code is: java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.3007692307692308
the code is: database.execSQL(TABLE_EVENTLOG_CREATE)the similarity of this stuff is: 0.030000000000000027
the code is: database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))the similarity of this stuff is: 0.15384615384615385
the code is: database.execSQL(CELL_DATABASE_CREATE)the similarity of this stuff is: 0.027692307692307683
the code is: android.database.sqlite.SQLiteDatabase databasethe similarity of this stuff is: 0.033076923076923115
the code is: java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"the similarity of this stuff is: 0.17692307692307696
the code is: database.execSQL(DEFAULT_MCC_DATABASE_CREATE)the similarity of this stuff is: 0.03230769230769226
the code is: java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.23615384615384616
the code is: database.execSQL(SMS_DATABASE_CREATE)the similarity of this stuff is: 0.02692307692307694
the code is: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"the similarity of this stuff is: 0.3884615384615384
the code is: java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"the similarity of this stuff is: 0.21692307692307689
the code is: database.execSQL(LOC_DATABASE_CREATE)the similarity of this stuff is: 0.02692307692307694
the code is: database.execSQL(ZeroSMS)the similarity of this stuff is: 0.019230769230769273
the code is: database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))the similarity of this stuff is: 0.0592307692307692
the code is: java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"the similarity of this stuff is: 0.27692307692307694
use extracted method directly
Variable Access that almost only used in the deleted part is: 
the most used element: (TABLE_EVENTLOG)
Field Access that almost only used in the deleted part is: 
the most used element: (TABLE_EVENTLOG)
Invocation that almost only used in the deleted part is: 
Nothing used in the code
Type Access that almost only used in the deleted part is: 
the most used element: com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA
Typed element that almost only used in the deleted part is: 
the most used element: java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Package that almost only used in the deleted part is: 
the most used package: com.SecUpwN.AIMSICD.constants.Examples
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1395
	createOpenCellIDTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1391
	createCellSignalTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1393
	createLocationTable(database)
Insert Parameter at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1386
	android.database.sqlite.SQLiteDatabase database
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1446
	private void createCellSignalTable(android.database.sqlite.SQLiteDatabase database) {
	    database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"));
	    database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"));
	    database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"));
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1396
	createDefaultMCCTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1492
	private void createLocationTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(LOC_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1513
	private void createCellTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(CELL_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1599
	private void createEventLogTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");";
	    database.execSQL(TABLE_EVENTLOG_CREATE);
	    java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');";
	    database.execSQL(ZeroEvent);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1394
	createCellTable(database)
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1556
	private void createOpenCellIDTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");";
	    database.execSQL(OPENCELLID_DATABASE_CREATE);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1464
	private void createSilentSmsTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);";
	    database.execSQL(SMS_DATABASE_CREATE);
	    java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');";
	    database.execSQL(ZeroSMS);
	}
Insert Method at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1583
	private void createDefaultMCCTable(android.database.sqlite.SQLiteDatabase database) {
	    java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);";
	    database.execSQL(DEFAULT_MCC_DATABASE_CREATE);
	}
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1401
	createEventLogTable(database)
Insert Invocation at com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter:1392
	createSilentSmsTable(database)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1580 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1635
	java.lang.String ZeroEvent = (((((((((((((((("INSERT INTO " + (TABLE_EVENTLOG)) + " (LAC,CID,PSC, gpsd_lat,gpsd_lon,gpsd_accu, DF_id,DF_desc) ") + "VALUES (") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.LAC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.CID)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.PSC)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LAT)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_LON)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.GPSD_ACCU)) + ",") + (com.SecUpwN.AIMSICD.constants.Examples.EVENT_LOG_DATA.DF_ID)) + ",'CellID not found in OCID Database');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1590 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1645
	database.execSQL(ZeroEvent)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1521 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1575
	database.execSQL(OPENCELLID_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1427 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1477
	java.lang.String ZeroSMS = (((((("INSERT INTO " + (SILENT_SMS_TABLE)) + " (Address,Display,Class,ServiceCtr,Message) ") + "VALUES ('") + (Examples.SILENT_SMS_CARD_DATA.ADDRESS)) + "','") + (Examples.SILENT_SMS_CARD_DATA.DISPLAY)) + "','CLAZZ','SMSC','DaTestMessage');"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1406 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1454
	database.execSQL((("CREATE INDEX cellID_timestamp ON " + (CELL_SIGNAL_TABLE)) + " (timestamp);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1461 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1514
	java.lang.String CELL_DATABASE_CREATE = (((((((((((((((((("CREATE TABLE " + (CELL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "Net INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Accuracy REAL, ") + "Speed REAL, ") + "Direction REAL, ") + "NetworkType VARCHAR, ") + "MeasurementTaken VARCHAR, ") + "OCID_SUBMITTED INTEGER DEFAULT 0, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1574 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1629
	database.execSQL(TABLE_EVENTLOG_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1400 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1448
	database.execSQL((((((("CREATE TABLE " + (CELL_SIGNAL_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "cellID INTEGER, signal INTEGER, ") + "timestamp INTEGER);"))
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1479 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1532
	database.execSQL(CELL_DATABASE_CREATE)
Move Parameter from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1387 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1599
	android.database.sqlite.SQLiteDatabase database
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1528 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1584
	java.lang.String DEFAULT_MCC_DATABASE_CREATE = ((((((("CREATE TABLE " + (TABLE_DEFAULT_MCC)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Country VARCHAR, ") + "Mcc INTEGER, ") + "Lat VARCHAR, ") + "Lng VARCHAR);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1535 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1591
	database.execSQL(DEFAULT_MCC_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1442 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1493
	java.lang.String LOC_DATABASE_CREATE = (((((((((("CREATE TABLE " + (LOCATION_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lac INTEGER, CellID INTEGER, ") + "Net VARCHAR, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Signal INTEGER, ") + "Connection VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1424 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1474
	database.execSQL(SMS_DATABASE_CREATE)
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1562 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1617
	java.lang.String TABLE_EVENTLOG_CREATE = ((((((((((((("CREATE TABLE " + (TABLE_EVENTLOG)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT,") + "time     		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,") + "LAC           	INTEGER NOT NULL,") + "CID           	INTEGER NOT NULL,") + "PSC           	INTEGER,") + "gpsd_lat      	REAL,") + "gpsd_lon      	REAL,") + "gpsd_accu     	INTEGER,") + "DF_id         	INTEGER,") + "DF_desc    	TEXT") + ");"
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1415 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1465
	java.lang.String SMS_DATABASE_CREATE = ((((((((("CREATE TABLE " + (SILENT_SMS_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Address VARCHAR, ") + "Display VARCHAR, ") + "Class VARCHAR, ") + "ServiceCtr VARCHAR, ") + "Message VARCHAR, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);"
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1452 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503
	database.execSQL(LOC_DATABASE_CREATE)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1432 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1482
	database.execSQL(ZeroSMS)
Move Invocation from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1405 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1453
	database.execSQL((("CREATE INDEX cellID_index ON " + (CELL_SIGNAL_TABLE)) + " (cellID);"))
Move LocalVariable from com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1503 to com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter$DbHelper:1557
	java.lang.String OPENCELLID_DATABASE_CREATE = (((((((((((((((("CREATE TABLE " + (OPENCELLID_TABLE)) + " (") + (com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.COLUMN_ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + "Lat VARCHAR, ") + "Lng VARCHAR, ") + "Mcc INTEGER, ") + "Mnc INTEGER, ") + "Lac INTEGER, ") + "CellID INTEGER, ") + "AvgSigStr INTEGER, ") + "avg_range INTEGER, ") + "Samples INTEGER, ") + "isGPSexact INTEGER, ") + "Type TEXT, ") + "Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP") + ");"

line_number: 12
Archive:  3224abedd01aaa85aae9ae3399efe92557f42e55.zip
3224abedd01aaa85aae9ae3399efe92557f42e55
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/.gitignore  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/README.md  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Argument.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Command.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Man.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Named.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Option.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Required.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/Usage.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/AbstractPathCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/EmptyCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/EnumCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/FileCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/ObjectNameCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/SystemPropertyNameCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/completers/ThreadCompleter.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/ArgumentDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/CommandDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/Description.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/Format.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/OptionDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/descriptor/ParameterDescriptor.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/CLIException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/Delimiter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/LiteralValue.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/Multiplicity.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/ParameterType.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/SyntaxException.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/bootstrap/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/bootstrap/CommandProvider.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/bootstrap/Main.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/CommandCompletion.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/Completion.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/CompletionException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/CompletionMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/CompletionMatcher.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/EmptyCompletion.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/OptionCompletion.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/ParameterCompletion.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/completion/SpaceCompletion.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/descriptor/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/descriptor/Help.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/descriptor/HelpDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/descriptor/IllegalParameterException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/descriptor/IllegalValueTypeException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/descriptor/IntrospectionException.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/ArgumentMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/CommandInvoker.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/InvocationException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/InvocationMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/InvocationMatcher.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/OptionMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/ParameterMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/invocation/TokenList.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/Binding.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/BoundArgumentDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/BoundOptionDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/ClassDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/ClassFieldBinding.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/CommandFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/Instance.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/MethodArgumentBinding.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/MethodDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/ObjectCommandDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/ObjectCommandInvoker.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/lang/Util.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/line/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/line/LineParser.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/line/MultiLineVisitor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/line/Quoting.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/line/ValueLineVisitor.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/log/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/log/LogConfigurator.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/parser/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/parser/Event.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/parser/Mode.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/parser/Parser.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/parser/Status.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/tokenizer/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/tokenizer/Automaton.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/tokenizer/Token.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/tokenizer/Tokenizer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/impl/tokenizer/TokenizerImpl.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/spi/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/spi/Completer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/spi/Completion.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/type/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/type/ValueType.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/main/java/org/crsh/cli/type/ValueTypeFactory.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/completers/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/completers/PathCompleterTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/CommandInfoTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/DescriptionTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/HelpTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/OptionTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/bootstrap/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/bootstrap/BootstrapTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/lang/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/lang/Parser2TestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/lang/ParserTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/lang/UtilTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/line/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/line/LineParserTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/CompleteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/CompleterSupport.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/Custom.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/CustomValueType.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/EscapeTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/matcher/MatcherTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/tokenizer/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/tokenizer/TokenizerTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/type/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/type/MissingValueTypeTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/java/org/crsh/cli/impl/type/SimpleValueTypeTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/META-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/META-INF/services/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/META-INF/services/org.crsh.cli.type.ValueType  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/org/crsh/cli/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/org/crsh/cli/impl/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/org/crsh/cli/impl/type/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/cli/src/test/resources/org/crsh/cli/impl/type/InvalidValueType  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/assembly/standalone.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/auth/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/auth/FilePublicKeyProvider.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/auth/KeyAuthenticationPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/SSHPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/AbstractCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/CRaSHCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/CRaSHCommandFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/FailCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/SSHContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/SSHLifeCycle.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/Status.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/URLKeyPairProvider.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/SSHInlineCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/SSHInlinePlugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/SSHInlineShellProcessContext.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/CommandPlugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/SCPAction.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/SCPCommandFactory.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/subsystem/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/term/subsystem/SubsystemFactoryPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/util/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/java/org/crsh/ssh/util/KeyPairUtils.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/META-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/META-INF/services/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/crash/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/crash/crash.properties  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/main/resources/crash/hostkey.pem  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/crsh/ssh/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/crsh/ssh/EncodingTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/crsh/ssh/Foo.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/crsh/ssh/SSHClient.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/java/org/crsh/ssh/SSHTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/resources/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/ssh/src/test/resources/known_hosts  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/assembly/standalone.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/TelnetPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/CodeType.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/TelnetHandler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/TelnetIO.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/TelnetLifeCycle.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/Term.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/TermEvent.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/TermLifeCycle.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/console/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/console/ConsoleTerm.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/console/TermIOBuffer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/console/TermIOWriter.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/ProcessContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/Processor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/ProcessorIOHandler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/Status.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/spi/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/spi/TermIO.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/java/org/crsh/telnet/term/spi/TermIOHandler.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/META-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/META-INF/services/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/crash/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/crash/crash.properties  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/main/resources/crash/telnet.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/AbstractProcessorTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/AbstractTelnetTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/AbstractTerm.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/AsyncProcessorTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/ClientDisconnectTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/ClientReadTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/ClientWriteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/HandlerDisconnectTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/IOAction.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/IOEvent.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/IOHandler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/ProcessorTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/ServerShutdownTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/SyncProcessorTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/SyncTerm.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/AbstractTermBufferTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/ConsoleTermTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/SimpleTermIO.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/TermBufferNoMoveTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/TermBufferTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/console/TermIOWriterTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/spi/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/java/org/crsh/telnet/term/spi/TestTermIO.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/resources/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/resources/clientDisconnect.btm  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/telnet/src/test/resources/serverShutdown.btm  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/assembly/jar.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/CRaSHConnector.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/CRaSHSession.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/Configurator.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/Event.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/WSLifeCycle.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/WSProcessContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/java/org/crsh/web/servlet/WebPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/resources/META-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/resources/META-INF/services/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/WEB-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/WEB-INF/crash/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/WEB-INF/crash/crash.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/css/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/css/jquery.terminal.css  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/index.html  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/crash.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/dterm.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/jquery-1.7.1.min.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/jquery.mousewheel-min.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/jquery.terminal-0.7.12.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/jquery.terminal-0.7.12.min.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/jquery.terminal-min.js  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/connectors/web/src/main/webapp/js/jquery.terminal-src.js  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/bintrayUpload.groovy  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/distrib.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/docs.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/gvm.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/mule-app.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/packaging.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/spring.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/assembly/war.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/packaging/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/packaging/Readme.txt  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/distrib/src/main/packaging/lgpl-2.1.txt  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/api/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/api/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/attaching_to.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/book.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/faq.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/first_command.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/howToPrintAnArray.wiki  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/asciidoc/how_to_database.asciidoc  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/assembly/html.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/resources/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/cookbook/src/main/resources/rocket-panda.css  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/authentication.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/book.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/configuration.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/connectors.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/cron.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/developers.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/extension.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/groovy.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/mail.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/running.asciidoc  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/asciidoc/shell.asciidoc  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/assembly/html.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/images/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/images/crash.png  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/images/crash.svg  
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/images/crash48.png  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/java/org/crsh/doc/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/java/org/crsh/doc/Generator.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/resources/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/doc/reference/src/main/resources/rocket-panda.css  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/crsh/spring/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/crsh/spring/SpringBootstrap.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/crsh/spring/SpringMap.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/crsh/spring/SpringPluginDiscovery.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/main/java/org/crsh/spring/SpringWebBootstrap.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/java/org/crsh/spring/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/java/org/crsh/spring/Foo.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/java/org/crsh/spring/SpringTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/crash/commands/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/crash/commands/foo_cmd.groovy  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/org/crsh/spring/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/embed/spring/src/test/resources/org/crsh/spring/spring.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/assembly/mule-app.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/assembly/packaging.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/assembly/spring.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/assembly/war.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/README.md  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/classes/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/classes/crash-config-default.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/classes/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/classes/crash/commands/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/classes/crash/commands/base/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/classes/crash/commands/base/mule.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/mule/mule-config.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/bin/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/bin/crash.bat  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/bin/crash.sh  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/cmd/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/cmd/clock.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/cmd/date.groovy  
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/cmd/hello.groovy  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/conf/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/packaging/conf/logging.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/crash/commands/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/crash/commands/spring.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/jboss-deployment-structure.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/spring.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/spring/WEB-INF/web.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/WEB-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/WEB-INF/crash/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/WEB-INF/crash/crash.properties  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/WEB-INF/jboss-deployment-structure.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/WEB-INF/web.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/packaging/src/main/webapp/index.html  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/crsh/cron/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/crsh/cron/CRaSHTask.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/crsh/cron/CRaSHTaskDef.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/crsh/cron/CRaSHTaskProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/java/org/crsh/cron/CronPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/META-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/META-INF/services/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/crash/commands/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/crash/commands/cron/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/crash/commands/cron/cron.groovy  
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/main/resources/crash/crontab  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/test/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/test/java/org/crsh/cron/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/cron/src/test/java/org/crsh/cron/CrontabTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/java/org/crsh/mail/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/java/org/crsh/mail/MailPlugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/java/org/crsh/mail/SmtpSecure.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/META-INF/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/META-INF/services/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/crash/commands/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/crash/commands/mail/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/crash/commands/mail/mail.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/main/resources/crash/crash.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/crsh/mail/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/crsh/mail/MailCommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/crsh/mail/MailPluginTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/crsh/mail/StrongTLS.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/java/org/crsh/mail/Support.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/crsh/mail/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/crsh/mail/image.png  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/crsh/mail/keystore.jks  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/crsh/mail/selfsignedcert.cer  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/mail/src/test/resources/org/crsh/mail/truststore.jks  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/plugins/pom.xml  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/pom.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/assembly/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/assembly/standalone.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/auth/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/auth/AuthenticationPlugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/auth/JaasAuthenticationPlugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/auth/SimpleAuthenticationPlugin.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/AbstractCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/BaseCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/CRaSHCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/CommandContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/InvocationContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/Pipe.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/RuntimeContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/command/ScriptException.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/At.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/Console.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/ConsoleDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/Editor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/EditorAction.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/EditorBuffer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/EditorWriter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/KeyStroke.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/Mode.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/Plugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/ProcessHandler.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/jline/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/console/jline/JLineProcessor.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/groovy/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/groovy/GroovyCommand.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/keyboard/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/keyboard/KeyHandler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/keyboard/KeyType.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/LanguageCommandResolver.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/LanguageProxy.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyClassFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyCompiler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyLanguage.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyLanguageProxy.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyLineEscaper.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyRepl.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/Helper.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/ShellBinding.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/ast/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/ast/ArgumentNameTransformer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/ast/CommandTransformer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/ast/DefaultImportTransformer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/ast/ScriptLastStatementTransformer.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/ClosureDelegate.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/ClosureElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/ClosureInvoker.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/CommandElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineClosure.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineInvocationContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineInvoker.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/command/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/command/GroovyScript.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/command/GroovyScriptCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/groovy/command/GroovyScriptShellCommand.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/BaseCommandMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/ClassShellCommand.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/ClasspathResolver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/CompilationFailureException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/Compiler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/JavaClassFileObject.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/JavaCompiler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/JavaFileManagerImpl.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/JavaLanguage.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/JavaSourceFileObject.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/LoadingClassLoader.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/NodeJavaFileObject.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/PipeCommandMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/java/ProducerCommandMatch.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/CommandNotFoundException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/PipeLineFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/ScriptCompiler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/ScriptLanguage.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/ScriptRepl.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/impl/script/Token.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/spi/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/spi/CommandResolution.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/spi/Compiler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/spi/Language.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/spi/Repl.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/lang/spi/ReplResponse.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/CRaSHPlugin.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/Embedded.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/PluginContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/PluginDiscovery.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/PluginLifeCycle.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/PluginManager.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/Property.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/PropertyDescriptor.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/PropertyManager.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/ResourceKind.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/ResourceManager.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/ServiceLoaderDiscovery.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/SimplePluginDiscovery.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/plugin/WebPluginLifeCycle.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/ErrorKind.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/InteractionContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/Shell.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/ShellFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/ShellProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/ShellProcessContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/ShellResponse.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/async/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/async/AsyncProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/async/AsyncShell.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/async/Status.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/AbstractInvocationContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSH.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSHCommandProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSHProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSHProcessContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSHResponseProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSHSession.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/CRaSHShellFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/InvocationContextImpl.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/RuntimeContextImpl.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/ShellSession.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/pipeline/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/pipeline/CommandInvokerAdapter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/pipeline/PipeLine.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/spi/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/spi/Command.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandException.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandInvoker.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandMatch.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandResolver.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/system/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/system/ReplCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/system/SystemResolver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/system/help.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/command/system/repl.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/ClientAutomaton.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/ClientMessage.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/ClientProcessContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/RemoteClient.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/RemoteServer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/ServerAutomaton.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/ServerMessage.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/shell/impl/remoting/ServerProcess.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/standalone/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/standalone/Agent.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/standalone/Bootstrap.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/standalone/CRaSH.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/standalone/CRaSHProvider.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/stream/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/stream/Consumer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/stream/Filter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/stream/Producer.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/CLS.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/Color.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/Decoration.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/Format.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/LineReader.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/LineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/RenderAppendable.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/RenderPrintWriter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/RenderWriter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/Renderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ScreenBuffer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ScreenContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ScreenContextConsumer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/Screenable.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/Style.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/VirtualScreen.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/BindingRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/EntityTypeRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/FileRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/LogRecordRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/LoggerRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/MBeanInfoRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/MapRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/MemoryUsageLineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/MemoryUsageRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/ObjectNameRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/renderers/ThreadRenderer.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/BorderStyle.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/Element.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/ElementRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/EvalElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/LabelElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/LabelLineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/LabelReader.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/Layout.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/Overflow.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/RowElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/RowLineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TableElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TableLineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TableRowLineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TableRowReader.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TextElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TreeElement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/TreeLineRenderer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/UIBuilder.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/text/ui/UIBuilderRenderer.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/AbstractSocketClient.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/AbstractSocketServer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/BaseIterator.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/BlankSequence.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/CharSlicer.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/ClassCache.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/ClassFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/CloseableList.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/InputStreamFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/InterruptHandler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/JNDIHandler.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/Pair.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/SafeCallable.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/ServletContextMap.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/SimpleMap.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/Statement.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/TimestampedObject.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/Utils.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/util/ZipIterator.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/FS.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/File.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/Handle.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/Path.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/Resource.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/AbstractFSDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/FSDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/FSMountFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/Mount.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/file/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/file/FileDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/file/FileMountFactory.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/ram/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/ram/RAMDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/ram/RAMMountFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/ram/RAMURLConnection.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/ram/RAMURLStreamHandler.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/servlet/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/servlet/ServletContextDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/servlet/WarMountFactory.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/url/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/url/ClassPathMountFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/url/Node.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/url/Resource.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/java/org/crsh/vfs/spi/url/URLDriver.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/MANIFEST.MF  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/services/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/services/org.codehaus.groovy.transform.ASTTransformation  
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/services/org.crsh.cli.impl.bootstrap.CommandProvider  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/META-INF/services/org.crsh.text.Renderer  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/dashboard.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/egrep.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/env.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/filter.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/java.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/jdbc.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/jmx.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/jndi.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/jpa.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/jul.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/jvm.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/less.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/login.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/logout.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/man.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/shell.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/sleep.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/sort.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/system.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/commands/base/thread.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/main/resources/crash/crash.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/AbstractTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/HelpTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/InvocationContextTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/EGrepTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/FilterCommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/JDBCCommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/JMXCommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/JNDICommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/JPACommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/SortCommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/SystemCommandTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/entities/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/entities/Bar.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/entities/Foo.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/entities/Foo2.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/Bindings.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/EmptyContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/ErrorContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/ErrorInitialContextFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/JPAContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/JPAInitialContextFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/NestedContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/NestedInitialContextFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/SimpleContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/SimpleInitialContextFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/TypedContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/command/base/factory/TypedInitialContextFactory.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/AbstractConsoleTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/AbstractEditorBufferTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/ConsoleEmacsTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/ConsoleTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/ConsoleViMoveTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/EditorBufferNoMoveTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/EditorBufferTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/KeyStrokes.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/SimpleConsoleDriver.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/TestDriver.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/AbstractPasteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/AcceptLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/BackwardCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/BackwardDeleteCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/BackwardKillLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/BackwardKillWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/BackwardWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/BeginningOfLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ClearScreenTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/CompleteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/DeleteCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/EndOfLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ExitOrDeleteCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ForwardCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ForwardWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/HistoryTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/InsertCommentTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/InterruptTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/KillLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/KillWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/SelfInsertTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/TransposeCharsTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/UnixLineDiscardTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/UnixWordRuboutTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/UnmappedTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/VIPutTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViAppendModeTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitChangeCaseTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitChangeCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitChangeToNextWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitDeleteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitDeleteToNextWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitEndWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitNextWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViArgDigitPrevWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViChangeCaseTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViChangeCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViChangeToChangeToTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViChangeToEndOfLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViChangeToEolTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViChangeToForwardCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDeleteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDeleteToDeleteToTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDeleteToEndOfLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDeleteToEolTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDeleteToForwardCharTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDeleteToNextWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDigitChangeToTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViDigitDeleteToTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViEditingTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViEndWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViEofMaybeTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViInsertBegTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViKillWholeLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViMoveAcceptLineTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViNextWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViPrevWordTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/ViYankToTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/console/operations/YankTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/ReplTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/groovy/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/groovy/ArgumentNameTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/groovy/ParameterTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/groovy/ScriptReturnValueTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/groovy/ScriptTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/java/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/java/ClasspathResolverTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/java/CompilerTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/java/JavaCommandTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/script/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/script/ParserTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/script/ScriptTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/lang/impl/script/TokenTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/plugin/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/plugin/PropertyManagerTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/AbstractShellTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/CancellationTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/CommandTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/CompleteTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/KeyHandlerTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/ShellTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/async/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/async/AsyncShellTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/async/CancellationTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/async/FailureTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/async/ShutdownTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/command/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/command/CustomCommandResolverTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/command/DispatchTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/command/PipeLineFailureTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/command/PipeTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/remoting/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/remoting/RemoteShellTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/shell/impl/remoting/ServerMessageTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/stream/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/stream/ProducerTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ScreenBufferTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/VirtualScreenTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/AbstractRendererTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/AnsiBuilderTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/EvalTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/LabelRendererTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/RendererTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/RowRendererTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/TableElementTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/TableRendererTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/TreeElementTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/TreeRendererTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/text/ui/UIBuilderTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/SafeTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/SimpleMapTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/StatementTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/StringsTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/TypeResolverTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/util/UtilsTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/vfs/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/vfs/FSTestCase.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/vfs/PathTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/vfs/spi/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/vfs/spi/servlet/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/org/crsh/vfs/spi/servlet/ServletContextTestCase.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/CommandQueue.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/command/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/command/Commands.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/command/TestInvocationContext.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/plugin/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/plugin/TestPluginLifeCycle.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/base/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/base/BaseProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/base/BaseProcessContext.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/base/BaseProcessFactory.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/base/BaseShell.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/sync/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/sync/SyncCompleter.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/sync/SyncProcess.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/shell/sync/SyncShell.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/text/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/text/Value.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/java/test/text/ValueRenderable.java  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/META-INF/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/META-INF/persistence.xml  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/META-INF/services/
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/META-INF/services/org.crsh.text.Renderer  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/commons-logging.properties  
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/
   creating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/attribute.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/cls.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/dbscript.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/defaultimport.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/echo.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/evaluate.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/fail.groovy  
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/groovyversion.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/invalid.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/invoke.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/java_command.java  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/keyhandler.groovy  
 extracting: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/login.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/password.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/progressive.groovy  
  inflating: 3224ab/crash-3224abedd01aaa85aae9ae3399efe92557f42e55/shell/src/test/resources/crash/commands/test/readline.groovy  
Archive:  2801269c7e47bd6e243612654a74cee809d20959.zip
2801269c7e47bd6e243612654a74cee809d20959
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/.gitignore  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/README.md  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Argument.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Command.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Man.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Named.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Option.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Required.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/Usage.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/AbstractPathCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/EmptyCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/EnumCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/FileCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/ObjectNameCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/SystemPropertyNameCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/completers/ThreadCompleter.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/ArgumentDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/CommandDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/Description.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/Format.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/OptionDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/descriptor/ParameterDescriptor.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/CLIException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/Delimiter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/LiteralValue.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/Multiplicity.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/ParameterType.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/SyntaxException.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/bootstrap/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/bootstrap/CommandProvider.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/bootstrap/Main.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/CommandCompletion.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/Completion.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/CompletionException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/CompletionMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/CompletionMatcher.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/EmptyCompletion.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/OptionCompletion.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/ParameterCompletion.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/completion/SpaceCompletion.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/descriptor/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/descriptor/Help.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/descriptor/HelpDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/descriptor/IllegalParameterException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/descriptor/IllegalValueTypeException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/descriptor/IntrospectionException.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/ArgumentMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/CommandInvoker.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/InvocationException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/InvocationMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/InvocationMatcher.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/OptionMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/ParameterMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/invocation/TokenList.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/Binding.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/BoundArgumentDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/BoundOptionDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/ClassDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/ClassFieldBinding.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/CommandFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/Instance.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/MethodArgumentBinding.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/MethodDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/ObjectCommandDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/ObjectCommandInvoker.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/lang/Util.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/line/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/line/LineParser.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/line/MultiLineVisitor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/line/Quoting.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/line/ValueLineVisitor.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/log/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/log/LogConfigurator.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/parser/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/parser/Event.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/parser/Mode.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/parser/Parser.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/parser/Status.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/tokenizer/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/tokenizer/Automaton.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/tokenizer/Token.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/tokenizer/Tokenizer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/impl/tokenizer/TokenizerImpl.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/spi/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/spi/Completer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/spi/Completion.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/type/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/type/ValueType.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/main/java/org/crsh/cli/type/ValueTypeFactory.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/completers/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/completers/PathCompleterTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/CommandInfoTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/DescriptionTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/HelpTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/OptionTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/bootstrap/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/bootstrap/BootstrapTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/lang/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/lang/Parser2TestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/lang/ParserTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/lang/UtilTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/line/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/line/LineParserTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/CompleteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/CompleterSupport.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/Custom.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/CustomValueType.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/EscapeTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/matcher/MatcherTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/tokenizer/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/tokenizer/TokenizerTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/type/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/type/MissingValueTypeTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/java/org/crsh/cli/impl/type/SimpleValueTypeTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/META-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/META-INF/services/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/META-INF/services/org.crsh.cli.type.ValueType  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/org/crsh/cli/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/org/crsh/cli/impl/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/org/crsh/cli/impl/type/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/cli/src/test/resources/org/crsh/cli/impl/type/InvalidValueType  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/assembly/standalone.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/auth/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/auth/FilePublicKeyProvider.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/auth/KeyAuthenticationPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/SSHPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/AbstractCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/CRaSHCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/CRaSHCommandFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/FailCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/SSHContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/SSHLifeCycle.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/Status.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/URLKeyPairProvider.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/SSHInlineCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/SSHInlinePlugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/inline/SSHInlineShellProcessContext.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/CommandPlugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/SCPAction.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/scp/SCPCommandFactory.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/subsystem/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/term/subsystem/SubsystemFactoryPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/util/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/java/org/crsh/ssh/util/KeyPairUtils.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/META-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/META-INF/services/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/crash/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/crash/crash.properties  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/main/resources/crash/hostkey.pem  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/auth/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/auth/FilePublicKeyProviderTest.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/ssh/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/ssh/EncodingTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/ssh/Foo.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/ssh/SSHClient.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/java/org/crsh/ssh/SSHTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/resources/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/resources/known_hosts  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/ssh/src/test/resources/test_authorized_key.pem  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/assembly/standalone.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/TelnetPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/CodeType.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/TelnetHandler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/TelnetIO.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/TelnetLifeCycle.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/Term.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/TermEvent.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/TermLifeCycle.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/console/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/console/ConsoleTerm.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/console/TermIOBuffer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/console/TermIOWriter.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/ProcessContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/Processor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/ProcessorIOHandler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/processor/Status.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/spi/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/spi/TermIO.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/java/org/crsh/telnet/term/spi/TermIOHandler.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/META-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/META-INF/services/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/crash/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/crash/crash.properties  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/main/resources/crash/telnet.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/AbstractProcessorTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/AbstractTelnetTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/AbstractTerm.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/AsyncProcessorTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/ClientDisconnectTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/ClientReadTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/ClientWriteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/HandlerDisconnectTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/IOAction.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/IOEvent.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/IOHandler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/ProcessorTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/ServerShutdownTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/SyncProcessorTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/SyncTerm.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/AbstractTermBufferTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/ConsoleTermTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/SimpleTermIO.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/TermBufferNoMoveTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/TermBufferTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/console/TermIOWriterTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/spi/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/java/org/crsh/telnet/term/spi/TestTermIO.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/resources/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/resources/clientDisconnect.btm  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/telnet/src/test/resources/serverShutdown.btm  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/assembly/jar.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/CRaSHConnector.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/CRaSHSession.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/Configurator.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/Event.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/WSLifeCycle.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/WSProcessContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/java/org/crsh/web/servlet/WebPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/resources/META-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/resources/META-INF/services/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/WEB-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/WEB-INF/crash/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/WEB-INF/crash/crash.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/css/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/css/jquery.terminal.css  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/index.html  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/crash.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/dterm.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/jquery-1.7.1.min.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/jquery.mousewheel-min.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/jquery.terminal-0.7.12.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/jquery.terminal-0.7.12.min.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/jquery.terminal-min.js  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/connectors/web/src/main/webapp/js/jquery.terminal-src.js  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/bintrayUpload.groovy  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/distrib.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/docs.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/gvm.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/mule-app.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/packaging.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/spring.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/assembly/war.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/packaging/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/packaging/Readme.txt  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/distrib/src/main/packaging/lgpl-2.1.txt  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/api/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/api/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/attaching_to.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/book.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/faq.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/first_command.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/howToPrintAnArray.wiki  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/asciidoc/how_to_database.asciidoc  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/assembly/html.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/resources/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/cookbook/src/main/resources/rocket-panda.css  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/authentication.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/book.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/configuration.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/connectors.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/cron.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/developers.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/extension.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/groovy.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/mail.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/running.asciidoc  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/asciidoc/shell.asciidoc  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/assembly/html.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/images/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/images/crash.png  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/images/crash.svg  
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/images/crash48.png  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/java/org/crsh/doc/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/java/org/crsh/doc/Generator.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/resources/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/doc/reference/src/main/resources/rocket-panda.css  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/crsh/spring/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/crsh/spring/SpringBootstrap.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/crsh/spring/SpringMap.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/crsh/spring/SpringPluginDiscovery.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/main/java/org/crsh/spring/SpringWebBootstrap.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/java/org/crsh/spring/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/java/org/crsh/spring/Foo.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/java/org/crsh/spring/SpringTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/crash/commands/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/crash/commands/foo_cmd.groovy  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/org/crsh/spring/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/embed/spring/src/test/resources/org/crsh/spring/spring.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/assembly/mule-app.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/assembly/packaging.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/assembly/spring.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/assembly/war.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/README.md  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/classes/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/classes/crash-config-default.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/classes/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/classes/crash/commands/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/classes/crash/commands/base/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/classes/crash/commands/base/mule.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/mule/mule-config.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/bin/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/bin/crash.bat  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/bin/crash.sh  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/cmd/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/cmd/clock.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/cmd/date.groovy  
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/cmd/hello.groovy  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/conf/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/packaging/conf/logging.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/crash/commands/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/crash/commands/spring.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/jboss-deployment-structure.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/spring.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/spring/WEB-INF/web.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/WEB-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/WEB-INF/crash/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/WEB-INF/crash/crash.properties  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/WEB-INF/jboss-deployment-structure.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/WEB-INF/web.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/packaging/src/main/webapp/index.html  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/crsh/cron/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/crsh/cron/CRaSHTask.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/crsh/cron/CRaSHTaskDef.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/crsh/cron/CRaSHTaskProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/java/org/crsh/cron/CronPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/META-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/META-INF/services/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/crash/commands/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/crash/commands/cron/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/crash/commands/cron/cron.groovy  
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/main/resources/crash/crontab  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/test/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/test/java/org/crsh/cron/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/cron/src/test/java/org/crsh/cron/CrontabTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/java/org/crsh/mail/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/java/org/crsh/mail/MailPlugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/java/org/crsh/mail/SmtpSecure.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/META-INF/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/META-INF/services/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/crash/commands/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/crash/commands/mail/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/crash/commands/mail/mail.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/main/resources/crash/crash.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/crsh/mail/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/crsh/mail/MailCommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/crsh/mail/MailPluginTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/crsh/mail/StrongTLS.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/java/org/crsh/mail/Support.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/crsh/mail/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/crsh/mail/image.png  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/crsh/mail/keystore.jks  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/crsh/mail/selfsignedcert.cer  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/mail/src/test/resources/org/crsh/mail/truststore.jks  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/plugins/pom.xml  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/pom.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/assembly/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/assembly/standalone.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/auth/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/auth/AuthenticationPlugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/auth/JaasAuthenticationPlugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/auth/SimpleAuthenticationPlugin.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/AbstractCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/BaseCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/CRaSHCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/CommandContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/InvocationContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/Pipe.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/RuntimeContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/command/ScriptException.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/At.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/Console.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/ConsoleDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/Editor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/EditorAction.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/EditorBuffer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/EditorWriter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/KeyStroke.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/Mode.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/Plugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/ProcessHandler.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/jline/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/console/jline/JLineProcessor.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/groovy/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/groovy/GroovyCommand.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/keyboard/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/keyboard/KeyHandler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/keyboard/KeyType.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/LanguageCommandResolver.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/LanguageProxy.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyClassFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyCompiler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyLanguage.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyLanguageProxy.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyLineEscaper.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/GroovyRepl.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/Helper.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/ShellBinding.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/ast/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/ast/ArgumentNameTransformer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/ast/CommandTransformer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/ast/DefaultImportTransformer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/ast/ScriptLastStatementTransformer.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/ClosureDelegate.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/ClosureElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/ClosureInvoker.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/CommandElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineClosure.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineInvocationContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/closure/PipeLineInvoker.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/command/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/command/GroovyScript.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/command/GroovyScriptCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/groovy/command/GroovyScriptShellCommand.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/BaseCommandMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/ClassShellCommand.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/ClasspathResolver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/CompilationFailureException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/Compiler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/JavaClassFileObject.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/JavaCompiler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/JavaFileManagerImpl.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/JavaLanguage.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/JavaSourceFileObject.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/LoadingClassLoader.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/NodeJavaFileObject.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/PipeCommandMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/java/ProducerCommandMatch.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/CommandNotFoundException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/PipeLineFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/ScriptCompiler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/ScriptLanguage.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/ScriptRepl.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/impl/script/Token.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/spi/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/spi/CommandResolution.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/spi/Compiler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/spi/Language.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/spi/Repl.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/lang/spi/ReplResponse.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/CRaSHPlugin.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/Embedded.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/PluginContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/PluginDiscovery.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/PluginLifeCycle.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/PluginManager.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/Property.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/PropertyDescriptor.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/PropertyManager.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/ResourceKind.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/ResourceManager.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/ServiceLoaderDiscovery.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/SimplePluginDiscovery.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/plugin/WebPluginLifeCycle.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/ErrorKind.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/InteractionContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/Shell.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/ShellFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/ShellProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/ShellProcessContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/ShellResponse.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/async/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/async/AsyncProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/async/AsyncShell.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/async/Status.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/AbstractInvocationContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSH.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSHCommandProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSHProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSHProcessContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSHResponseProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSHSession.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/CRaSHShellFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/InvocationContextImpl.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/RuntimeContextImpl.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/ShellSession.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/pipeline/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/pipeline/CommandInvokerAdapter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/pipeline/PipeLine.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/spi/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/spi/Command.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandException.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandInvoker.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandMatch.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/spi/CommandResolver.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/system/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/system/ReplCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/system/SystemResolver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/system/help.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/command/system/repl.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/ClientAutomaton.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/ClientMessage.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/ClientProcessContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/RemoteClient.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/RemoteServer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/ServerAutomaton.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/ServerMessage.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/shell/impl/remoting/ServerProcess.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/standalone/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/standalone/Agent.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/standalone/Bootstrap.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/standalone/CRaSH.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/standalone/CRaSHProvider.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/stream/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/stream/Consumer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/stream/Filter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/stream/Producer.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/CLS.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/Color.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/Decoration.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/Format.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/LineReader.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/LineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/RenderAppendable.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/RenderPrintWriter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/RenderWriter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/Renderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ScreenBuffer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ScreenContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ScreenContextConsumer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/Screenable.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/Style.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/VirtualScreen.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/BindingRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/EntityTypeRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/FileRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/LogRecordRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/LoggerRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/MBeanInfoRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/MapRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/MemoryUsageLineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/MemoryUsageRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/ObjectNameRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/renderers/ThreadRenderer.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/BorderStyle.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/Element.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/ElementRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/EvalElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/LabelElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/LabelLineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/LabelReader.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/Layout.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/Overflow.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/RowElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/RowLineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TableElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TableLineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TableRowLineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TableRowReader.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TextElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TreeElement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/TreeLineRenderer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/UIBuilder.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/text/ui/UIBuilderRenderer.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/AbstractSocketClient.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/AbstractSocketServer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/BaseIterator.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/BlankSequence.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/CharSlicer.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/ClassCache.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/ClassFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/CloseableList.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/InputStreamFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/InterruptHandler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/JNDIHandler.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/Pair.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/SafeCallable.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/ServletContextMap.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/SimpleMap.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/Statement.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/TimestampedObject.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/Utils.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/util/ZipIterator.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/FS.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/File.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/Handle.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/Path.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/Resource.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/AbstractFSDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/FSDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/FSMountFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/Mount.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/file/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/file/FileDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/file/FileMountFactory.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/ram/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/ram/RAMDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/ram/RAMMountFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/ram/RAMURLConnection.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/ram/RAMURLStreamHandler.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/servlet/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/servlet/ServletContextDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/servlet/WarMountFactory.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/url/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/url/ClassPathMountFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/url/Node.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/url/Resource.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/java/org/crsh/vfs/spi/url/URLDriver.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/MANIFEST.MF  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/services/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/services/org.codehaus.groovy.transform.ASTTransformation  
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/services/org.crsh.cli.impl.bootstrap.CommandProvider  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/services/org.crsh.plugin.CRaSHPlugin  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/META-INF/services/org.crsh.text.Renderer  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/dashboard.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/egrep.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/env.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/filter.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/java.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/jdbc.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/jmx.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/jndi.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/jpa.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/jul.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/jvm.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/less.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/login.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/logout.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/man.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/shell.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/sleep.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/sort.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/system.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/commands/base/thread.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/main/resources/crash/crash.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/AbstractTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/HelpTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/InvocationContextTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/EGrepTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/FilterCommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/JDBCCommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/JMXCommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/JNDICommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/JPACommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/SortCommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/SystemCommandTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/entities/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/entities/Bar.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/entities/Foo.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/entities/Foo2.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/Bindings.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/EmptyContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/ErrorContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/ErrorInitialContextFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/JPAContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/JPAInitialContextFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/NestedContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/NestedInitialContextFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/SimpleContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/SimpleInitialContextFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/TypedContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/command/base/factory/TypedInitialContextFactory.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/AbstractConsoleTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/AbstractEditorBufferTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/ConsoleEmacsTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/ConsoleTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/ConsoleViMoveTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/EditorBufferNoMoveTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/EditorBufferTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/KeyStrokes.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/SimpleConsoleDriver.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/TestDriver.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/AbstractPasteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/AcceptLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/BackwardCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/BackwardDeleteCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/BackwardKillLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/BackwardKillWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/BackwardWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/BeginningOfLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ClearScreenTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/CompleteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/DeleteCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/EndOfLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ExitOrDeleteCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ForwardCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ForwardWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/HistoryTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/InsertCommentTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/InterruptTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/KillLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/KillWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/SelfInsertTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/TransposeCharsTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/UnixLineDiscardTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/UnixWordRuboutTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/UnmappedTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/VIPutTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViAppendModeTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitChangeCaseTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitChangeCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitChangeToNextWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitDeleteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitDeleteToNextWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitEndWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitNextWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViArgDigitPrevWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViChangeCaseTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViChangeCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViChangeToChangeToTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViChangeToEndOfLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViChangeToEolTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViChangeToForwardCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDeleteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDeleteToDeleteToTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDeleteToEndOfLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDeleteToEolTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDeleteToForwardCharTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDeleteToNextWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDigitChangeToTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViDigitDeleteToTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViEditingTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViEndWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViEofMaybeTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViInsertBegTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViKillWholeLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViMoveAcceptLineTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViNextWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViPrevWordTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/ViYankToTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/console/operations/YankTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/ReplTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/groovy/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/groovy/ArgumentNameTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/groovy/ParameterTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/groovy/ScriptReturnValueTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/groovy/ScriptTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/java/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/java/ClasspathResolverTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/java/CompilerTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/java/JavaCommandTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/script/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/script/ParserTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/script/ScriptTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/lang/impl/script/TokenTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/plugin/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/plugin/PropertyManagerTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/AbstractShellTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/CancellationTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/CommandTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/CompleteTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/KeyHandlerTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/ShellTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/async/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/async/AsyncShellTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/async/CancellationTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/async/FailureTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/async/ShutdownTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/command/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/command/CustomCommandResolverTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/command/DispatchTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/command/PipeLineFailureTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/command/PipeTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/remoting/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/remoting/RemoteShellTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/shell/impl/remoting/ServerMessageTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/stream/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/stream/ProducerTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ScreenBufferTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/VirtualScreenTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/AbstractRendererTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/AnsiBuilderTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/EvalTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/LabelRendererTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/RendererTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/RowRendererTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/TableElementTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/TableRendererTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/TreeElementTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/TreeRendererTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/text/ui/UIBuilderTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/SafeTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/SimpleMapTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/StatementTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/StringsTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/TypeResolverTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/util/UtilsTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/vfs/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/vfs/FSTestCase.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/vfs/PathTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/vfs/spi/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/vfs/spi/servlet/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/org/crsh/vfs/spi/servlet/ServletContextTestCase.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/CommandQueue.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/command/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/command/Commands.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/command/TestInvocationContext.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/plugin/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/plugin/TestPluginLifeCycle.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/base/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/base/BaseProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/base/BaseProcessContext.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/base/BaseProcessFactory.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/base/BaseShell.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/sync/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/sync/SyncCompleter.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/sync/SyncProcess.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/shell/sync/SyncShell.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/text/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/text/Value.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/java/test/text/ValueRenderable.java  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/META-INF/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/META-INF/persistence.xml  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/META-INF/services/
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/META-INF/services/org.crsh.text.Renderer  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/commons-logging.properties  
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/
   creating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/attribute.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/cls.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/dbscript.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/defaultimport.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/echo.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/evaluate.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/fail.groovy  
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/groovyversion.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/invalid.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/invoke.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/java_command.java  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/keyhandler.groovy  
 extracting: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/login.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/password.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/progressive.groovy  
  inflating: 280126/crash-2801269c7e47bd6e243612654a74cee809d20959/shell/src/test/resources/crash/commands/test/readline.groovy  
True
action: Update
nodeType: Invocation
keyPair.getPublicKeyInfo()
action: Update
nodeType: VariableRead
converter
action: Delete
nodeType: Block
{
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter();
    keys.add(new java.security.KeyPair(converter.getPublicKey(keyPair.getPublicKeyInfo()), null));
}
action: Insert
nodeType: Block
{
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
}
========if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
} else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========if (o instanceof java.security.PublicKey) {
    keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
} else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
} else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========if (o instanceof java.security.KeyPair) {
    keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
} else if (o instanceof java.security.PublicKey) {
    keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
} else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
} else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========{
    java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
    if (o instanceof java.security.KeyPair) {
        keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
    } else if (o instanceof java.security.PublicKey) {
        keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
    } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
        keys.add(convertPemKeyPair(keyPair));
    } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
        keys.add(convertPemKeyPair(keyPair));
    } else {
        throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
    }
}
========try {
    java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
    if (o instanceof java.security.KeyPair) {
        keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
    } else if (o instanceof java.security.PublicKey) {
        keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
    } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
        keys.add(convertPemKeyPair(keyPair));
    } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
        keys.add(convertPemKeyPair(keyPair));
    } else {
        throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
    }
} catch (java.lang.Exception e) {
    org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
}
========{
    try {
        java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
        if (o instanceof java.security.KeyPair) {
            keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
        } else if (o instanceof java.security.PublicKey) {
            keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
        } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
            keys.add(convertPemKeyPair(keyPair));
        } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
            keys.add(convertPemKeyPair(keyPair));
        } else {
            throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
        }
    } catch (java.lang.Exception e) {
        org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
    }
}
========for (java.lang.String file : files) {
    try {
        java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
        if (o instanceof java.security.KeyPair) {
            keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
        } else if (o instanceof java.security.PublicKey) {
            keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
        } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
            keys.add(convertPemKeyPair(keyPair));
        } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
            keys.add(convertPemKeyPair(keyPair));
        } else {
            throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
        }
    } catch (java.lang.Exception e) {
        org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
    }
}
========{
    if (!(org.apache.sshd.common.util.SecurityUtils.isBouncyCastleRegistered())) {
        throw new java.lang.IllegalStateException("BouncyCastle must be registered as a JCE provider");
    } 
    java.util.List<java.security.KeyPair> keys = new java.util.ArrayList<java.security.KeyPair>();
    for (java.lang.String file : files) {
        try {
            java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
            if (o instanceof java.security.KeyPair) {
                keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
            } else if (o instanceof java.security.PublicKey) {
                keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
            } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
                keys.add(convertPemKeyPair(keyPair));
            } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
                keys.add(convertPemKeyPair(keyPair));
            } else {
                throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
            }
        } catch (java.lang.Exception e) {
            org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
        }
    }
    return keys;
}
========public java.lang.Iterable<java.security.KeyPair> loadKeys() {
    if (!(org.apache.sshd.common.util.SecurityUtils.isBouncyCastleRegistered())) {
        throw new java.lang.IllegalStateException("BouncyCastle must be registered as a JCE provider");
    } 
    java.util.List<java.security.KeyPair> keys = new java.util.ArrayList<java.security.KeyPair>();
    for (java.lang.String file : files) {
        try {
            java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
            if (o instanceof java.security.KeyPair) {
                keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
            } else if (o instanceof java.security.PublicKey) {
                keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
            } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
                keys.add(convertPemKeyPair(keyPair));
            } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
                keys.add(convertPemKeyPair(keyPair));
            } else {
                throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
            }
        } catch (java.lang.Exception e) {
            org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
        }
    }
    return keys;
}
+++++++++++
action: Insert
nodeType: Method
private java.security.KeyPair convertPemKeyPair(org.bouncycastle.openssl.PEMKeyPair pemKeyPair) throws org.bouncycastle.openssl.PEMException {
    org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter();
    return new java.security.KeyPair(converter.getPublicKey(pemKeyPair.getPublicKeyInfo()), null);
}
--------------------A new method is inserted!
action: Insert
nodeType: If
if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
} else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========if (o instanceof java.security.PublicKey) {
    keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
} else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
} else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========if (o instanceof java.security.KeyPair) {
    keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
} else if (o instanceof java.security.PublicKey) {
    keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
} else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    keys.add(convertPemKeyPair(keyPair));
} else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
    keys.add(convertPemKeyPair(keyPair));
} else {
    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
}
========{
    java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
    if (o instanceof java.security.KeyPair) {
        keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
    } else if (o instanceof java.security.PublicKey) {
        keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
    } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
        keys.add(convertPemKeyPair(keyPair));
    } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
        keys.add(convertPemKeyPair(keyPair));
    } else {
        throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
    }
}
========try {
    java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
    if (o instanceof java.security.KeyPair) {
        keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
    } else if (o instanceof java.security.PublicKey) {
        keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
    } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
        keys.add(convertPemKeyPair(keyPair));
    } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
        org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
        keys.add(convertPemKeyPair(keyPair));
    } else {
        throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
    }
} catch (java.lang.Exception e) {
    org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
}
========{
    try {
        java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
        if (o instanceof java.security.KeyPair) {
            keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
        } else if (o instanceof java.security.PublicKey) {
            keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
        } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
            keys.add(convertPemKeyPair(keyPair));
        } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
            keys.add(convertPemKeyPair(keyPair));
        } else {
            throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
        }
    } catch (java.lang.Exception e) {
        org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
    }
}
========for (java.lang.String file : files) {
    try {
        java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
        if (o instanceof java.security.KeyPair) {
            keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
        } else if (o instanceof java.security.PublicKey) {
            keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
        } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
            keys.add(convertPemKeyPair(keyPair));
        } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
            org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
            keys.add(convertPemKeyPair(keyPair));
        } else {
            throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
        }
    } catch (java.lang.Exception e) {
        org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
    }
}
========{
    if (!(org.apache.sshd.common.util.SecurityUtils.isBouncyCastleRegistered())) {
        throw new java.lang.IllegalStateException("BouncyCastle must be registered as a JCE provider");
    } 
    java.util.List<java.security.KeyPair> keys = new java.util.ArrayList<java.security.KeyPair>();
    for (java.lang.String file : files) {
        try {
            java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
            if (o instanceof java.security.KeyPair) {
                keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
            } else if (o instanceof java.security.PublicKey) {
                keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
            } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
                keys.add(convertPemKeyPair(keyPair));
            } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
                keys.add(convertPemKeyPair(keyPair));
            } else {
                throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
            }
        } catch (java.lang.Exception e) {
            org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
        }
    }
    return keys;
}
========public java.lang.Iterable<java.security.KeyPair> loadKeys() {
    if (!(org.apache.sshd.common.util.SecurityUtils.isBouncyCastleRegistered())) {
        throw new java.lang.IllegalStateException("BouncyCastle must be registered as a JCE provider");
    } 
    java.util.List<java.security.KeyPair> keys = new java.util.ArrayList<java.security.KeyPair>();
    for (java.lang.String file : files) {
        try {
            java.lang.Object o = org.crsh.ssh.util.KeyPairUtils.readKey(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
            if (o instanceof java.security.KeyPair) {
                keys.add(new java.security.KeyPair(((java.security.KeyPair) (o)).getPublic(), null));
            } else if (o instanceof java.security.PublicKey) {
                keys.add(new java.security.KeyPair(((java.security.PublicKey) (o)), null));
            } else if (o instanceof org.bouncycastle.openssl.PEMKeyPair) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
                keys.add(convertPemKeyPair(keyPair));
            } else if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
                org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
                keys.add(convertPemKeyPair(keyPair));
            } else {
                throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
            }
        } catch (java.lang.Exception e) {
            org.crsh.auth.FilePublicKeyProvider.LOG.info("Unable to read key {}: {}", file, e);
        }
    }
    return keys;
}
+++++++++++
action: Move
nodeType: LocalVariable
org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter()
action: Move
nodeType: LocalVariable
org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o))
action: Move
nodeType: Invocation
keyPair.getPublicKeyInfo()
action: Move
nodeType: VariableRead
keys
action: Move
nodeType: VariableRead
converter
the code is: {
    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
    org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter();
    keys.add(new java.security.KeyPair(converter.getPublicKey(keyPair.getPublicKeyInfo()), null));
}the similarity of this stuff is: 0.6645962732919255
the code is: org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter()the similarity of this stuff is: 0.5242290748898679
the code is: org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o))the similarity of this stuff is: 0.3348017621145375
the code is: keyPair.getPublicKeyInfo()the similarity of this stuff is: 0.11013215859030834
the code is: keysthe similarity of this stuff is: 0.013215859030836996
the code is: converterthe similarity of this stuff is: 0.03964757709251099
Variable Access that almost only used in the deleted part is: 
the most used element: ((org.bouncycastle.openssl.PEMKeyPair) (o))
Field Access that almost only used in the deleted part is: 
Nothing used in the code
Invocation that almost only used in the deleted part is: 
the most used element: keys.add(new java.security.KeyPair(converter.getPublicKey(keyPair.getPublicKeyInfo()), null))
Type Access that almost only used in the deleted part is: 
Nothing used in the code
Typed element that almost only used in the deleted part is: 
the most used element: org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o))
Package that almost only used in the deleted part is: 
the most used package: org.bouncycastle.openssl.jcajce
Update Invocation at org.crsh.auth.FilePublicKeyProvider:68
	keyPair.getPublicKeyInfo() to convertPemKeyPair(keyPair)
Update VariableRead at org.crsh.auth.FilePublicKeyProvider:68
	converter to keys
Delete Block at org.crsh.auth.FilePublicKeyProvider:65
	{
	    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
	    org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter();
	    keys.add(new java.security.KeyPair(converter.getPublicKey(keyPair.getPublicKeyInfo()), null));
	}
Insert Block at org.crsh.auth.FilePublicKeyProvider:67
	{
	    org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o));
	    keys.add(convertPemKeyPair(keyPair));
	}
Insert Method at org.crsh.auth.FilePublicKeyProvider:84
	private java.security.KeyPair convertPemKeyPair(org.bouncycastle.openssl.PEMKeyPair pemKeyPair) throws org.bouncycastle.openssl.PEMException {
	    org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter();
	    return new java.security.KeyPair(converter.getPublicKey(pemKeyPair.getPublicKeyInfo()), null);
	}
Insert If at org.crsh.auth.FilePublicKeyProvider:70
	if (o instanceof org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) {
	    org.bouncycastle.openssl.PEMKeyPair keyPair = new org.bouncycastle.openssl.PEMKeyPair(((org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) (o)), null);
	    keys.add(convertPemKeyPair(keyPair));
	} else {
	    throw new java.lang.UnsupportedOperationException(java.lang.String.format("Key type %s not supported.", o.getClass().getName()));
	}
Move LocalVariable from org.crsh.auth.FilePublicKeyProvider:67 to org.crsh.auth.FilePublicKeyProvider:85
	org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter converter = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter()
Move LocalVariable from org.crsh.auth.FilePublicKeyProvider:66 to org.crsh.auth.FilePublicKeyProvider:68
	org.bouncycastle.openssl.PEMKeyPair keyPair = ((org.bouncycastle.openssl.PEMKeyPair) (o))
Move Invocation from org.crsh.auth.FilePublicKeyProvider:68 to org.crsh.auth.FilePublicKeyProvider:72
	keyPair.getPublicKeyInfo()
Move VariableRead from org.crsh.auth.FilePublicKeyProvider:68 to org.crsh.auth.FilePublicKeyProvider:69
	keys
Move VariableRead from org.crsh.auth.FilePublicKeyProvider:68 to org.crsh.auth.FilePublicKeyProvider:72
	converter

line_number: 15
