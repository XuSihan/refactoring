-----------------------Extracted Part---------------------

{
    int totalSize = offsetsTotalSize(offsets);
    byte[] b = new byte[totalSize];
    int bpos = 0;
    for (int i = 0; i < (offsets.length); i++) {
        int plus = i == ((offsets.length) - 1) ? 0 : 8;
        long size = ((offsets[i]) >>> 48) - plus;
        if ((CC.PARANOID) && ((size & 65535) != size))
            throw new java.lang.AssertionError("size mismatch");
        
        long offset = (offsets[i]) & (org.mapdb.StoreDirect.MOFFSET);
        vol.getData((offset + plus), b, bpos, ((int) (size)));
        bpos += size;
    }
    if ((CC.PARANOID) && (bpos != totalSize))
        throw new java.lang.AssertionError("size does not match");
    
    java.io.DataInput in = new DataInputByteArray(b);
    return deserialize(serializer, totalSize, in);
}

--------------------------Source Methods------------------------------

@java.lang.Override
protected <A> A get2(long recid, org.mapdb.Serializer<A> serializer) {
    if (CC.PARANOID)
        assertReadLocked(recid);
    
    long[] offsets = offsetsGet(recid);
    if (offsets == null) {
        return null;
    } else if ((offsets.length) == 0) {
        return deserialize(serializer, 0, new DataInputByteArray(new byte[0]));
    } else if ((offsets.length) == 1) {
        int size = ((int) ((offsets[0]) >>> 48));
        long offset = (offsets[0]) & (org.mapdb.StoreDirect.MOFFSET);
        java.io.DataInput in = vol.getDataInput(offset, size);
        return deserialize(serializer, size, in);
    } else {
        int totalSize = offsetsTotalSize(offsets);
        byte[] b = new byte[totalSize];
        int bpos = 0;
        for (int i = 0; i < (offsets.length); i++) {
            int plus = i == ((offsets.length) - 1) ? 0 : 8;
            long size = ((offsets[i]) >>> 48) - plus;
            if ((CC.PARANOID) && ((size & 65535) != size))
                throw new java.lang.AssertionError("size mismatch");
            
            long offset = (offsets[i]) & (org.mapdb.StoreDirect.MOFFSET);
            vol.getData((offset + plus), b, bpos, ((int) (size)));
            bpos += size;
        }
        if ((CC.PARANOID) && (bpos != totalSize))
            throw new java.lang.AssertionError("size does not match");
        
        java.io.DataInput in = new DataInputByteArray(b);
        return deserialize(serializer, totalSize, in);
    }
}

--------------------------end-----------------------------

